// <auto-generated />
using System;
using ControlInventoryManagment.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControlInventoryManagment.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240713204539_FixOperationsTable")]
    partial class FixOperationsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControlInventoryManagment.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameCategorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Entreprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("LocalId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Entreprises");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Etage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EntrepriseId")
                        .HasColumnType("int");

                    b.Property<int>("LocalId")
                        .HasColumnType("int");

                    b.Property<string>("TypeEtage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntrepriseId");

                    b.HasIndex("LocalId");

                    b.ToTable("Etages");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId1")
                        .HasColumnType("int");

                    b.Property<int?>("EntrepriseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CityId1");

                    b.HasIndex("EntrepriseId");

                    b.ToTable("Locals");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QrId")
                        .HasColumnType("int");

                    b.Property<string>("SerialNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StockageId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("StockageId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Stockage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EtagetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EtagetId");

                    b.ToTable("Stockages");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.TypeEtage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeEtages");
                });

            modelBuilder.Entity("OperationProduct", b =>
                {
                    b.Property<int>("OperationsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("OperationsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OperationProduct");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Entreprise", b =>
                {
                    b.HasOne("ControlInventoryManagment.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Etage", b =>
                {
                    b.HasOne("ControlInventoryManagment.Models.Entreprise", null)
                        .WithMany("Etages")
                        .HasForeignKey("EntrepriseId");

                    b.HasOne("ControlInventoryManagment.Models.Local", "Local")
                        .WithMany("Etages")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Local", b =>
                {
                    b.HasOne("ControlInventoryManagment.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControlInventoryManagment.Models.City", null)
                        .WithMany("Locals")
                        .HasForeignKey("CityId1");

                    b.HasOne("ControlInventoryManagment.Models.Entreprise", null)
                        .WithMany("Locals")
                        .HasForeignKey("EntrepriseId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Product", b =>
                {
                    b.HasOne("ControlInventoryManagment.Models.Categorie", "Categorie")
                        .WithMany()
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControlInventoryManagment.Models.Stockage", null)
                        .WithMany("Products")
                        .HasForeignKey("StockageId");

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Stockage", b =>
                {
                    b.HasOne("ControlInventoryManagment.Models.Etage", "Etage")
                        .WithMany("Stockages")
                        .HasForeignKey("EtagetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etage");
                });

            modelBuilder.Entity("OperationProduct", b =>
                {
                    b.HasOne("ControlInventoryManagment.Models.Operation", null)
                        .WithMany()
                        .HasForeignKey("OperationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlInventoryManagment.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.City", b =>
                {
                    b.Navigation("Locals");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Entreprise", b =>
                {
                    b.Navigation("Etages");

                    b.Navigation("Locals");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Etage", b =>
                {
                    b.Navigation("Stockages");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Local", b =>
                {
                    b.Navigation("Etages");
                });

            modelBuilder.Entity("ControlInventoryManagment.Models.Stockage", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
